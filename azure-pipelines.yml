trigger:
  - main  # or any branch you want to trigger the pipeline

pool:
  vmImage: 'windows-latest'  # Use a Windows agent as we're running PowerShell

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: PowerShell@2
  displayName: 'Install latest Pester'
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name Pester -Force -SkipPublisherCheck
      Import-Module Pester -PassThru
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $url = "https://raw.githubusercontent.com/WinHub001/pestertest/main/app.json.Tests.ps1"
      $outputPath = "$(Build.SourcesDirectory)\app.json.Tests.ps1"
      
      Invoke-WebRequest -Uri $url -OutFile $outputPath
      
      if (Test-Path $outputPath) {
        Write-Host "File downloaded successfully to $outputPath"
      } else {
        Write-Error "Failed to download file"
        exit 1
      }
  displayName: 'Download File'
  
- task: PowerShell@2
  displayName: 'Run Pester Tests'
  inputs:
    targetType: 'inline'
    script: |
      $result = Invoke-Pester -Path "$(System.DefaultWorkingDirectory)/app.json.Tests.ps1" -PassThru -OutputFormat NUnitXml -OutputFile TestResults/test-results.xml
      if ($result.FailedCount -gt 0) { Write-Error "Failed '$($result.FailedCount)' tests." }

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'Pester Tests'

- task: PublishCodeCoverageResults@2
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '**/coverage.xml'
    reportDirectory: '**/coverage'